@page "/registrar"
@using CentroEventos.Aplicacion.Interfaces
@using CentroEventos.Aplicacion.Servicio
@using CentroEventos.Aplicacion.Entidades
@inject NavigationManager Nav
@inject IRepositorioUsuario ServicioUsuarios
@inject ServicioSesionUsuario Sesion

<h3>Registro de nuevo usuario</h3>

<EditForm Model="@usuario" OnValidSubmit="Registrar" FormName="registroUsuario">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="form-group">
        <label for="nombre">Nombre:</label>
        <InputText id="nombre" @bind-Value="usuario.Nombre" class="form-control" />
        <ValidationMessage For="@(() => usuario.Nombre)" />
    </div>

    <div class="form-group">
        <label for="apellido">Apellido:</label>
        <InputText id="apellido" @bind-Value="usuario.Apellido" class="form-control" />
        <ValidationMessage For="@(() => usuario.Apellido)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="usuario.Email" class="form-control" />
        <ValidationMessage For="@(() => usuario.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña:</label>
        <InputText id="password" @bind-Value="usuario.Contrasenia" type="password" class="form-control" />
        <ValidationMessage For="@(() => usuario.Contrasenia)" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirmar contraseña:</label>
        <InputText id="confirmPassword" @bind-Value="confirmar" type="password" class="form-control" />
        <small class="text-danger">@error</small>
    </div>

    <button type="submit" class="btn btn-primary">Registrarse</button>
</EditForm>

@if (!string.IsNullOrEmpty(error))
{
    <p style="color:red">@error</p>
}

@code {
    private Usuario usuario = new();
    private string contraseña = string.Empty;
    private string confirmar = string.Empty;
    private string? error;

    private void Registrar()
    {
        error = null;

        if (contraseña != confirmar)
        {
            error = "Las contraseñas no coinciden.";
            return;
        }

        try
        {
            var usuarioCreado = ServicioUsuarios.Agregar(usuario);
            Sesion.IniciarSesion(usuarioCreado);
            Nav.NavigateTo("/");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}
using CentroEventos.Aplicacion.Entidades;
#line default
